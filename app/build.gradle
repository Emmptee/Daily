apply plugin: 'com.android.application'
apply plugin: 'bugly'

bugly {
    appId = "c73ecc54da"
    appKey = "27580d71-8095-4e00-8212-85b9ddf985a4"
}
def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.sdf.daily"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        ndk { abiFilters "armeabi", "x86_64", "x86" }

    }
    buildTypes {
        debug {
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant -> //批量修改Apk名字
                variant.outputs.all { output ->
                    if (!variant.buildType.isDebuggable()) {
                        //要被替换的源字符串
                        def sourceFile = "-${variant.flavorName}-${variant.buildType.name}"
                        //替换的字符串
                        def replaceFile = "YiZhi_${variant.flavorName}_${variant.versionName}_${variant.buildType.name}_${buildTime()}"
                        outputFileName = output.outputFile.name.replace(sourceFile, replaceFile);
                    }
                }
            }
        }
    }
    lintOptions{
        checkReleaseBuilds false
        abortOnError false
    }
    buildToolsVersion '27.0.3'
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
//    implementation 'com.android.support:appcompat-v7:27.1.1'
    api 'com.android.support.constraint:constraint-layout:1.1.2'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"
    implementation project(':sdk')
    androidTestImplementation project(':sdk')
    releaseImplementation project(':sdk')

    // Android support
    api "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:design:$rootProject.supportLibraryVersion"
    api "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"

    // Retrofit
    api "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    api "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttploggingVersion"
    api "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"

    // RxJava
    api "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    api "com.jakewharton.rxbinding2:rxbinding:$rootProject.rxbindingVersion"

    // Glide
    api "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    api "com.github.bumptech.glide:okhttp-integration:$rootProject.glideokhttpVersion"
    api "jp.wasabeef:glide-transformations:$rootProject.glideTransformationVersion"

    //Butterknife
    api "com.jakewharton:butterknife:$rootProject.butterknifeVersion"

    //fragmentation
    api "me.yokeyword:fragmentation:$rootProject.fragmentationVersion"

    //Logger
    api "com.orhanobut:logger:$rootProject.loggerVersion"

    //circle imageview
    api "de.hdodenhof:circleimageview:$rootProject.circleImageviewVersion"

    //BaseRecyclerViewAdapterHelper
    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:$rootProject.BaseRecyclerViewAdapterHelperVersion"

    //SwitchButton
    api "com.kyleduo.switchbutton:library:$rootProject.SwtichButtonVersion"

    //PhotoView
    api "com.bm.photoview:library:$rootProject.PhotoViewVersion"

    api "com.cocosw:bottomsheet:$rootProject.BottomSheetVersion"

    //permissions
    api "com.tbruyelle.rxpermissions2:rxpermissions:$rootProject.rxPerssionsVersion"

    //Bugly
    api 'com.tencent.bugly:crashreport:latest.release'
//    api 'com.github.zhaokaiqiang.klog:library:1.6.0'
    //klog
    api "com.github.zhaokaiqiang.klog:library:$rootProject.KlogVersion"

}
